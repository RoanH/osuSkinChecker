image: openjdk:8

variables:
  GIT_STRATEGY: clone
  SSL_SELF_SIGNED: "true"
  PROJECTNAME: "osuSkinChecker"

before_script:
  - java -version

stages:
  - compile
  - status
  - javadoc

pending:
  allow_failure: true
  script:
    - curl ${SERVER}ci/status.sh | bash -s ${PROJECTNAME} ${CI_COMMIT_SHA} pending
  stage: compile

success:
  allow_failure: true
  script:
    - curl ${SERVER}ci/status.sh | bash -s ${PROJECTNAME} ${CI_COMMIT_SHA} success
  when: on_success
  stage: status

failure:
  allow_failure: true
  script:
    - curl ${SERVER}ci/status.sh | bash -s ${PROJECTNAME} ${CI_COMMIT_SHA} failure
  when: on_failure
  stage: status

verify:
  allow_failure: true
  script:
    - wget ${SERVER}ci/javadoc.sh
    - chmod 755 javadoc.sh
    - ./javadoc.sh
  stage: javadoc

javadoc:
  script:
    - cd ${PROJECTNAME}
    - find src -name "*.java" > sources.txt
    - javadoc -private @sources.txt
  stage: javadoc

compile:
  script:
    - chmod -R 777 ./*
    - cd ${PROJECTNAME}
    - ls -l
    - rm -rf ./bin
    - mkdir bin
    - find src -name "*.java" > sources.txt
    - cd src
    - find -type f \( -name "*.*" ! -name "*.java" \) > ../resources.txt
    - cd ..
    - javac -cp . -d ./bin -g -verbose -version -encoding "UTF-8" @sources.txt
    - cd src
    - while read res; do cp --parents $res ../bin; done <../resources.txt
    - cd ..
    - cd bin
    - jar cvfe ${PROJECTNAME}-${CI_PIPELINE_ID}.jar me.roan.osuskinchecker.SkinChecker ./*
    - cd ../../
    - mv ./${PROJECTNAME}/bin/${PROJECTNAME}-${CI_PIPELINE_ID}.jar ./${PROJECTNAME}-${CI_PIPELINE_ID}.jar
  stage: compile
  environment: builds
  artifacts:
    name: "${NAME}"
    expire_in: 1 week
    paths:
      - ${PROJECTNAME}-${CI_PIPELINE_ID}.jar
